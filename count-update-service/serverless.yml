plugins:
  - serverless-latest-layer-version
  - serverless-offline

service: count-update-service
app: tally-backend
org: aroger7

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs14.x
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'secretsmanager:GetSecretValue'
        - 'lambda:InvokeFunction'
      Resource: '*'

functions:
  updatePlayerCounts:
    handler: ./update-player-counts-function/index.handler
    name: ${sls:stage}-update-player-counts-function
    memorySize: 512
    timeout: 360
    environment:
      ORM_LAYER_PATH: /opt/db
      DB_SECRET_NAME: TallyDbDevCredentialsSecret
      GET_PLAYER_COUNTS_FUNCTION_NAME: dev-get-batch-counts-function
    layers:
      - arn:aws:lambda:${opt:region, 'us-east-1'}:#{AWS::AccountId}:layer:${sls:stage}-orm-layer:latest
    # Disable for now since dev is only functional env
    # TODO: Re-enable once prod/staging are up, exclusively for those
    # events:
    #   - schedule:
    #       rate: cron(0 0/1 * * ? *)
          
    #       enabled: false

  getBatchCounts:
    handler: ./get-batch-counts-function/index.handler
    name: ${sls:stage}-get-batch-counts-function
    timeout: 120
    memorySize: 128

  updateAppStatsFunction:
    handler: ./update-app-stats-function/index.handler
    name: ${sls:stage}-update-app-stats-function
    memorySize: 128
    timeout: 360
    environment:
      ORM_LAYER_PATH: /opt/db
      DB_SECRET_NAME: TallyDbDevCredentialsSecret
    layers:
      - arn:aws:lambda:${opt:region, 'us-east-1'}:#{AWS::AccountId}:layer:${sls:stage}-orm-layer:latest